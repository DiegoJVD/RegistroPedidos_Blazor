@page "/Registro de Ordenes"

@inject IToastService Toast

<EditForm Model="orden" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="card">
        <div class="container">
            <div class="card-header">
                Registro de Moras
            </div>
            <div class="card-body">
                <form>
                    <div class="form-group">
                        <label> Mora Id:</label>
                        <div class="input-group">
                            <InputNumber @bind-Value="orden.OrdenId" class="form-control " />
                            <div class="input-group-append" display: inline-block>
                                <button type="button" class="btn btn-warning" @onclick="Buscar">
                                    <i class="oi oi-magnifying-glass mr-2" /> Buscar
                                </button>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Fecha:</label>
                        <InputDate @bind-Value="orden.Fecha" class="form-control " readonly />
                        <ValidationMessage For="@(() => orden.Fecha)" />
                    </div>
                    <div class="form-group">
                        <label>Suplidor : </label>
                        <select @bind="SuplidorSeleccionado" class="form-control">
                            <option value="0" disabled selected></option>
                            @foreach (var item in SuplidoresList)
                            {
                                @((suplidor) = SuplidoresBLL.Buscar(item.SuplidorId));
                            }

                            <option value="@suplidor.SuplidorId">Suplidor : @suplidor.Nombres</option>

                        </select>
                    </div>

                    <div class="card" style=" color: black; border-width: 3px">
                        <div class="card-body">

                            <div class="form-group form-inline">

                                <div class="form-inline">
                                    <label>Producto : </label>
                                    <select @bind="ProductoSeleccionado" class="form-control" style="width:250px; margin-right: 10px ">
                                        <option value="0" disabled selected></option>
                                        @foreach (var item in ProductosList)
                                        {
                                            @((producto) = ProductosBLL.Buscar(item.ProductoId));
                                        }

                                        <option value="@producto.ProductoId">Producto : @producto.Descripcion</option>

                                    </select>
                                </div>


                                <div class="form-inline" style="margin-right: 10px">

                                    <label>Costo: </label>
                                    <div class="input-group">
                                        <InputNumber @bind-Value="CostoProducto" class="form-control " />
                                    </div>
                                </div>

                                <div class="form-inline" >

                                    <label>Cantidad:</label>
                                    <div class="input-group">
                                        <InputNumber @bind-Value="CantidadProducto" class="form-control " />
                                    </div>
                                </div>
                                <div class="form-group " style="margin-top: 20px; margin-left: 700px">

                               
                                <div class="form-inline " >
                                    <button type="button" class="btn btn-primary input-group-text" style="margin-right:30px" @onclick="Agregar">
                                        Agregar
                                    </button>
                                </div>
                                <div class="form-inline">
                                    <button type="button" class="btn btn-danger input-group-text" @onclick="Remover">
                                        Remover
                                    </button>
                                </div>

                                </div>

                            </div>
                            <div class="table"  style=" height:200px; overflow: auto; display: block;">
                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th>Id:</th>
                                            <th>Descripción:</th>
                                            <th>Costo:</th>
                                            <th>Cantidad</th>
                                            <th>SubTotal</th>
                                        </tr>
                                    </thead>
                                    <tbody class="text-body">
                                        @foreach (var item in orden.Detalle)
                                        {
                                            <tr>
                                                <td>@item.ProductoId</td>

                                                <td>@ProductosBLL.Buscar(item.ProductoId).Descripcion</td>

                                                <td>@item.Costo</td>

                                                <td>@item.Cantidad</td>

                                                <td>@GetSubTotal(item.Id)</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <label class="form-control">Monto Total: @orden.Monto</label>
                </form>
            </div>

            <div class="card-footer">
                <div class="form-group text-center" display: inline-block>
                    <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">
                        <i class="oi oi-file mr-2" />Nuevo
                    </button>
                    <button type="submit" class="btn btn-lg btn-success">
                        <i class="oi oi-account-login" style="transform:rotate(90deg)" /> Guardar
                    </button>
                    <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar">
                        <i class="oi oi-trash mr-2" />Eliminar
                    </button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code
{
    private Ordenes orden = new Ordenes();

    public int SuplidorSeleccionado { get; set; }
    public int ProductoSeleccionado { get; set; }

    Suplidores suplidor = new Suplidores();
    Productos producto = new Productos();

    List<Suplidores> SuplidoresList = new List<Suplidores>();
    List<Productos> ProductosList = new List<Productos>();

    public float CantidadProducto { get; set; }
    public decimal CostoProducto { get; set; }


    protected override void OnInitialized()
    {
        Nuevo();
    }

    public float GetSubTotal(int id)
    {
        float resultado = 0;

        @foreach (var item in orden.Detalle)
        {
            if(item.Id == id)
            {
                resultado = (float)item.Costo * item.Cantidad;
            }
        }

        return resultado;
    }

    public void Nuevo()
    {
        SuplidorSeleccionado = 0;
        ProductoSeleccionado = 0;
        CostoProducto = 0;
        CantidadProducto = 0;


        SuplidoresList = SuplidoresBLL.GetList();
        ProductosList = ProductosBLL.GetList();
        orden = new Ordenes();
    }

    public void Eliminar()
    {
        bool Eliminado = false;
        Eliminado = OrdenesBLL.Eliminar(this.orden.OrdenId);
        if (Eliminado)
        {
            Nuevo();
            Toast.ShowSuccess("Eliminado correctamente");
        }
        else
            Toast.ShowError("No fue posible eliminar");

    }

    public bool Existe()
    {
        bool existe = false;

        foreach (var item in orden.Detalle)
        {
            if (item.ProductoId == ProductoSeleccionado)
            {
                return existe = true;
            }
            else
                existe = false;
        }
        return existe;
    }

    public void Agregar()
    {
        if (SuplidorSeleccionado == 0)
        {
            Toast.ShowError("Debe selecionar un suplidor");
            return;
        }

        if (ProductoSeleccionado == 0)
        {
            Toast.ShowError("Debe selecionar un producto");
            return;
        }

        bool existe = Existe();
        bool validado = ValidarAgregar();
        if (existe == false)
        {
            if (!validado)
                return;
            orden.Detalle.Add(new OrdenesDetalle { OrdenId = orden.OrdenId, ProductoId = ProductoSeleccionado, Costo = CostoProducto, Cantidad = CantidadProducto });
            orden.Monto += Convert.ToDecimal(CantidadProducto) * CostoProducto;
            Toast.ShowSuccess("Agregado correctamente");
            Actualizar();
        }
        else
            Toast.ShowError("El producto ya esta agregado");
    }

    public bool ValidarAgregar()
    {
        var producto = ProductosBLL.Buscar(ProductoSeleccionado);
        if (CantidadProducto > producto.Inventario)
        {
            Toast.ShowError("No hay inventario suficiente");
            CantidadProducto = producto.Inventario;
            return false;
        }
        else if (CantidadProducto < 0 || CostoProducto < 0)
        {
            Toast.ShowError("Elija una cantidad mayor a 0");
            return false;
        }
        else
            return true;
    }

    public void Remover()
    {
        int id = ProductoSeleccionado;

        if (Existe())
        {
            var detalleRemover = orden.Detalle.Find(d => d.ProductoId == id);
            orden.Monto -= Convert.ToDecimal(detalleRemover.Cantidad * Convert.ToDouble(detalleRemover.Costo));
            orden.Detalle.Remove(detalleRemover);
        }
        else
        {
            Toast.ShowError("El producto no esta agregado");
        }

    }

    private void Actualizar()
    {
        ProductoSeleccionado = 0;
        CantidadProducto = 0;

    }

    public void Buscar()
    {
        if (orden.OrdenId > 0)
        {
            var Orden = OrdenesBLL.Buscar(orden.OrdenId);

            if (orden != null) {
                this.orden = Orden;
                Actualizar();
            }
            else
            {
                Toast.ShowError("La orden no fue encontrada");
                Nuevo();
            }
            Actualizar();
        }
        else
            Toast.ShowWarning("No se ha ingresado ningun Id");
    }



    public void Guardar()
    {
        bool Guardado;


        Guardado = OrdenesBLL.Guardar(orden);

        if (Guardado)
        {
            Nuevo();
            Toast.ShowSuccess("Orden guardada correctamente");
        }
        else
            Toast.ShowError("No se pudo guardar la Orden");
    }


    }